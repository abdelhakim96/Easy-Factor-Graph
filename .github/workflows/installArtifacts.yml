 
name: Binaries Compilation

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  binCompile:
    strategy:
      # max-parallel: 4
      matrix:
        name: [ubuntu-gcc-static, ubuntu-clang-static, windows-VS-static,ubuntu-gcc-shared, ubuntu-clang-shared, windows-VS-shared]
        include:
            - name: ubuntu-gcc-static
              os: ubuntu-latest
              compiler_opt: ";-DCMAKE_C_COMPILER=gcc;-DCMAKE_CXX_COMPILER=g++"
              lib_opt: ""
            - name: ubuntu-clang-static
              os: ubuntu-latest
              compiler_opt: ";-DCMAKE_C_COMPILER=clang;-DCMAKE_CXX_COMPILER=clang++"
              lib_opt: ""
            - name: windows-VS-static
              os: windows-latest
              compiler_opt: ""      
              lib_opt: ""
            - name: ubuntu-gcc-shared
              os: ubuntu-latest
              compiler_opt: ";-DCMAKE_C_COMPILER=gcc;-DCMAKE_CXX_COMPILER=g++"
              lib_opt: ";-DLIB_OPT=ON"
            - name: ubuntu-clang-shared
              os: ubuntu-latest
              compiler_opt: ";-DCMAKE_C_COMPILER=clang;-DCMAKE_CXX_COMPILER=clang++"
              lib_opt: ";-DLIB_OPT=ON"
            - name: windows-VS-shared
              os: windows-latest
              compiler_opt: ""      
              lib_opt: ";-DLIB_OPT=ON"
              
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2.0.0
    - name: Build project
      uses: nicledomaS/cmake_build_action@v1.3
      with:
        cmake_args: -B./build;-DCMAKE_INSTALL_PREFIX:STRING=./artifacts/;-DBUILD_SAMPLES=OFF${{ matrix.compiler_opt }}${{ matrix.lib_opt }}
        submodule_update: ON
    - name: build release
      run: cmake --build ./build --config Release
    - name: Install artifacts
      run: cmake --install ./build --config Release
    - uses: actions/upload-artifact@v2
      with:
        path: artifacts
        name: ${{ matrix.name }}
